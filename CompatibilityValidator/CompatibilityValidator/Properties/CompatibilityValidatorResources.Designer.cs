//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tools.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CompatibilityValidatorResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CompatibilityValidatorResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tools.Properties.CompatibilityValidatorResources", typeof(CompatibilityValidatorResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This argument is not a valid uniform resource identifier: {0}.
        /// </summary>
        internal static string ExceptionInvalidAddressTemplate {
            get {
                return ResourceManager.GetString("ExceptionInvalidAddressTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This attribute name is not supported for filtering: {0}.
        /// </summary>
        internal static string ExceptionInvalidFilteringAttributeName {
            get {
                return ResourceManager.GetString("ExceptionInvalidFilteringAttributeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This manager attribute value is invalid: {0}.
        /// </summary>
        internal static string ExceptionInvalidManagerAttributeValueTemplate {
            get {
                return ResourceManager.GetString("ExceptionInvalidManagerAttributeValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This argument is not a valid version number: {0}.
        /// </summary>
        internal static string ExceptionInvalidVersionTemplate {
            get {
                return ResourceManager.GetString("ExceptionInvalidVersionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request: 
        ///    Resource: {0}
        ///    Operation: {1}
        ///    Headers: {2}
        ///    Content Type: {3}
        ///    Data: {4}.
        /// </summary>
        internal static string InformationRequestTemplate {
            get {
                return ResourceManager.GetString("InformationRequestTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response: 
        ///    Resource: {0}
        ///    Operation: {1}
        ///    Status Code: {2}
        ///   {3}.
        /// </summary>
        internal static string InformationResponseTemplate {
            get {
                return ResourceManager.GetString("InformationResponseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response: 
        ///{0}.
        /// </summary>
        internal static string InformationResponseValueTemplate {
            get {
                return ResourceManager.GetString("InformationResponseValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: SCIMCV &lt;a domain name, such as &quot;contoso.com&quot;&gt; &lt;the base address of the service, such as &quot;https://localhost:9000&quot;&gt; &lt;an OAuth bearer token&gt; &lt;1.0|1.1|2.0&gt; [true if group compatibility is to be tested, otherwise false] [the name of the user filtering attribute, which, by default, is externalId] [the name of the group filtering attribute, which, by default, is externalId].
        /// </summary>
        internal static string InformationUsage {
            get {
                return ResourceManager.GetString("InformationUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This attribute can be used to query groups: {0}.  However, because it is not the default attribute for querying groups, which is externalId, tenant administrators will have to edit the default schema to select {0} as the attribute for matching users in Azure Active Directory to groups at the specified endpoint.   .
        /// </summary>
        internal static string WarningCustomGroupFilterTemplate {
            get {
                return ResourceManager.GetString("WarningCustomGroupFilterTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This attribute can be used to query users: {0}.  However, because it is not the default attribute for querying users, which is externalId, tenant administrators will have to edit the default schema to select {0} as the attribute for matching users in Azure Active Directory to users at the specified endpoint.   .
        /// </summary>
        internal static string WarningCustomUserFilterTemplate {
            get {
                return ResourceManager.GetString("WarningCustomUserFilterTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response to request to the endpoint could not be parsed.  The endpoint cannot be integrated with Azure Active Directory.  .
        /// </summary>
        internal static string WarningDeserializationFailed {
            get {
                return ResourceManager.GetString("WarningDeserializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A group could not be created.  Testing of group integration cannot continue.    
        ///
        ///If investigation of the failure reveals that the problem is that the request to create the group included attributes that the endpoint cannot accept, then one could edit the source code of this program to exclude those attributes.  In that case, integration with Azure Active Directory is possible, provided tenant administrators edit the default group schema to exclude the unsupported attributes.  .
        /// </summary>
        internal static string WarningGroupCreationFailed {
            get {
                return ResourceManager.GetString("WarningGroupCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to delete a group failed.  The endpoint cannot be integrated with Azure Active Directory..
        /// </summary>
        internal static string WarningGroupDeletionFailed {
            get {
                return ResourceManager.GetString("WarningGroupDeletionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Querying for a group by this filtering attribute failed: {0}.  If a different group filtering attribute is supported, then supply the name of that attribute to this program as an optional parameter.  
        ///    {0}.
        /// </summary>
        internal static string WarningGroupQueryFailedTemplate {
            get {
                return ResourceManager.GetString("WarningGroupQueryFailedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to retrieve a group failed.  The endpoint cannot be integrated with Azure Active Directory.  .
        /// </summary>
        internal static string WarningGroupRetrievalFailed {
            get {
                return ResourceManager.GetString("WarningGroupRetrievalFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The test for group integration is being skipped.  If the endpoint does not support group provisioning, then it can be integrated with Azure Active Directory, provided tenant administrators edit the default schema to exclude groups.  .
        /// </summary>
        internal static string WarningGroupTestSkipped {
            get {
                return ResourceManager.GetString("WarningGroupTestSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to update a group failed.  The endpoint cannot be integrated with Azure Active Directory..
        /// </summary>
        internal static string WarningGroupUpdateFailed {
            get {
                return ResourceManager.GetString("WarningGroupUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;manager&quot; attribute does not appear to be supported.  The endpoint can be integrated with Azure Active Directory, provided tenant administrators edit the default user schema to exclude that attribute.  .
        /// </summary>
        internal static string WarningManagerAttributeNotSupported {
            get {
                return ResourceManager.GetString("WarningManagerAttributeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Querying for a resource with a given identifier and value for this reference attribute failed: {0}.  The endpoint can be integrated with Azure Active Directory, provided tenant administrators edit the default schema to exclude that attribute.  .
        /// </summary>
        internal static string WarningReferenceQueryFailedTemplate {
            get {
                return ResourceManager.GetString("WarningReferenceQueryFailedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user could not be created.  Testing cannot continue.    
        ///
        ///If investigation of the failure reveals that the problem is that the request to create the user included attributes that the endpoint cannot accept, then one could edit the source code of this program to exclude those attributes.  In that case, integration with Azure Active Directory is possible, provided tenant administrators edit the default user schema to exclude the unsupported attributes.  .
        /// </summary>
        internal static string WarningUserCreationFailed {
            get {
                return ResourceManager.GetString("WarningUserCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to delete a user failed.  The endpoint cannot be integrated with Azure Active Directory..
        /// </summary>
        internal static string WarningUserDeletionFailed {
            get {
                return ResourceManager.GetString("WarningUserDeletionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Querying for a user by this filtering attribute failed: {0}.  If a different user filtering attribute is supported, then supply the name of that attribute to this program as an optional parameter.  
        ///    {0}.
        /// </summary>
        internal static string WarningUserQueryFailedTemplate {
            get {
                return ResourceManager.GetString("WarningUserQueryFailedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to retrieve a user failed.  The endpoint cannot be integrated with Azure Active Directory.  .
        /// </summary>
        internal static string WarningUserRetrievalFailed {
            get {
                return ResourceManager.GetString("WarningUserRetrievalFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to update a user failed.  The endpoint cannot be integrated with Azure Active Directory..
        /// </summary>
        internal static string WarningUserUpdateFailed {
            get {
                return ResourceManager.GetString("WarningUserUpdateFailed", resourceCulture);
            }
        }
    }
}
